<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fzu.edu.dao.UserMapper">
  <resultMap id="BaseResultMap" type="fzu.edu.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_num" jdbcType="VARCHAR" property="userNum" />
    <result column="user_passwd" jdbcType="VARCHAR" property="userPasswd" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_tel" jdbcType="VARCHAR" property="userTel" />
    <result column="user_roleId" jdbcType="VARCHAR" property="userRoleid" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_num, user_passwd, user_name, user_tel, user_roleId, del_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="fzu.edu.model.User">
    insert into sys_user (id, user_num, user_passwd, 
      user_name, user_tel, user_roleId, 
      del_flag)
    values (#{id,jdbcType=INTEGER}, #{userNum,jdbcType=VARCHAR}, #{userPasswd,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{userTel,jdbcType=VARCHAR}, #{userRoleid,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="fzu.edu.model.User">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userNum != null">
        user_num,
      </if>
      <if test="userPasswd != null">
        user_passwd,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userTel != null">
        user_tel,
      </if>
      <if test="userRoleid != null">
        user_roleId,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userNum != null">
        #{userNum,jdbcType=VARCHAR},
      </if>
      <if test="userPasswd != null">
        #{userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null">
        #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="userRoleid != null">
        #{userRoleid,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="fzu.edu.model.User">
    update sys_user
    <set>
      <if test="userNum != null">
        user_num = #{userNum,jdbcType=VARCHAR},
      </if>
      <if test="userPasswd != null">
        user_passwd = #{userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null">
        user_tel = #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="userRoleid != null">
        user_roleId = #{userRoleid,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="fzu.edu.model.User">
    update sys_user
    set user_num = #{userNum,jdbcType=VARCHAR},
      user_passwd = #{userPasswd,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_tel = #{userTel,jdbcType=VARCHAR},
      user_roleId = #{userRoleid,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getAll" resultMap="BaseResultMap">
  select * from sys_user
  </select>
  
  <!-- 返回不同角色列表 -->
  <select id="getListByRole" parameterType="string" resultMap="BaseResultMap">
  select * from sys_user where user_roleId = #{userRoleid,jdbcType=VARCHAR}
  </select>
  
</mapper>